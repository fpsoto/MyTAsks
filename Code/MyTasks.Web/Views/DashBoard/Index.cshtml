@using MyTasks.Localization.Desktop
@{
    ViewBag.Title = Desktop.DashBoard; 
}

<div class="row">
    <div class="col-lg-12">
        <section > @*class="panel"*@
            <div class="row">
                <div class="col-lg-12">
                    <h3 class="page-header"><i class="fa fa-laptop"></i> @Desktop.DashBoard</h3>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                    <div class="info-box blue-bg">
                        <i class="fa fa-tasks"></i>
                        <div id="ticketCount" class="count">6.674</div>
                        <div class="title">@Desktop.Tickets</div>
                    </div><!--/.info-box-->
                </div><!--/.col-->

                <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                    <div class="info-box brown-bg">
                        <i class="fa fa-users"></i>
                        <div id="userCount"  class="count">0</div>
                        <div class="title">@Desktop.Users</div>
                    </div><!--/.info-box-->
                </div><!--/.col-->

                <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                    <div class="info-box dark-bg">
                        <i class="fa fa-desktop"></i>
                        <div id="projectCount"  class="count">0</div>
                        <div class="title">@Desktop.Projects</div>
                    </div><!--/.info-box-->
                </div><!--/.col-->

                <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                    <div class="info-box green-bg">
                        <i class="fa fa-building"></i>
                        <div id="customerCount" class="count">0</div>
                        <div class="title">@Desktop.Customers</div>
                    </div><!--/.info-box-->
                </div><!--/.col-->

            </div>
            <div class="row">
                <div class="panel-body">
                    <div class="tab-pane" id="chartjs">
                        <div class="row">
                            <!-- Projects -->
                            <div class="col-lg-6">
                                <section class="panel">
                                    <header class="panel-heading-dashboard-panel">
                                        @Desktop.SummaryByProject
                                    </header>
                                    <div class="panel-body text-center">
                                        <div id="chartProjectContainer" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
                                    </div>
                                </section>
                            </div>
                            <!-- Users -->
                            <div class="col-lg-6">
                                <section class="panel">
                                    <header class="panel-heading-dashboard-panel">@Desktop.SummaryByUser</header>
                                    <div class="panel-body text-center">
                                        <div id="chartUserContainer" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
                                    </div>
                                </section>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <section class="panel">
                        <header class="panel-heading-dashboard-panel">
                            @Desktop.OpenTicketByPriority
                        </header>
                        <div class="panel-body">
                            <div class="row projectListFilterRow">
                                <span>Filter by project: </span>
                                <select id=projectFilterforOpenTicketByPriority class="form-control" placeholder="Entity Status"
                                        multiple="multiple"></select>
                            </div>
                            <div class="row">
                                <table id="openByPriorityTable" class="table table-hover personal-task">
                                    <thead>
                                        <tr>
                                            <td>@Desktop.Priority</td>
                                            <td>@Desktop.Tickets</td>
                                            <td>@Desktop.Percentage</td>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </section>
                </div>
                <div class="col-lg-6">
                    <section class="panel">
                        <header class="panel-heading-dashboard-panel">
                            @Desktop.StatusSummary
                        </header>
                        <div class="panel-body">
                            <div class="row projectListFilterRow">
                                <span>Filter by project: </span>
                                <select id=projectFilterforStatusSummary class="form-control" placeholder="Entity Status"
                                        multiple="multiple"></select>
                            </div>
                            <div class="row">
                                <table id="statusSummaryTable" class="table table-hover personal-task">
                                    <thead>
                                        <tr>
                                            <td>@Desktop.Status</td>
                                            <td>@Desktop.Tickets</td>
                                            <td>@Desktop.Percentage</td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr></tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </section>
                </div>
            </div>
        </section>
    </div>
</div>



@section scripts{

    <script type="text/javascript">

        $(document)
            .ready(function() {
                dataService.getProjectsSummary(drawProjectChart);
                dataService.getUsersSummary(drawUserChart);
                dataService.getDashBoardSummary(drawDashBoard);
                dataService.getDashBoardOpenTicketByPriority("",setTableOpenByPriority);
                dataService.getDashBoardStatusSummary("",setTableStatusSummary);
                dataService.getProjectList(setProjectDropdowns);


                $('#projectFilterforOpenTicketByPriority').multiselect({
                    onChange: function (element, checked) {
                        $("#openByPriorityTable tbody").empty();
                        dataService.getDashBoardOpenTicketByPriority($('#projectFilterforOpenTicketByPriority').val(), setTableOpenByPriority);
                   }
                });

                $('#projectFilterforStatusSummary').multiselect({
                    onChange: function (element, checked) {
                        $("#statusSummaryTable tbody").empty();
                        dataService.getDashBoardStatusSummary($('#projectFilterforStatusSummary').val(), setTableStatusSummary);
                    }
                });



            });

        function setProjectDropdowns(data) {
            _.forEach(data,
                (item) => {
                    $('#projectFilterforOpenTicketByPriority')
                        .append('<option value="' + item.ProjectId + '">' + item.ProjectName + '</option>');

                    $('#projectFilterforStatusSummary')
                        .append('<option value="' + item.ProjectId + '">' + item.ProjectName + '</option>');

                });

            $('#projectFilterforOpenTicketByPriority').multiselect('rebuild');
            $('#projectFilterforStatusSummary').multiselect('rebuild');

        }

        function setTableOpenByPriority(data) {
            _.forEach(data,
                (item) => {

                    var newTr = "<tr>" +
                        "<td>" +
                        item.Priority +
                        "</td>" +
                        "<td>" +
                        item.NumberOfTickets +
                        "</td>" +
                        "<td>" +
                        item.Percentage +
                        "</td>" +
                        "</tr>";
                    appendRowToTable("#openByPriorityTable", newTr);
                });
        }

        function setTableStatusSummary(data) {
            _.forEach(data,
                (item) => {
                    var newTr = "<tr>" +
                        "<td>" +
                        item.Status +
                        "</td>" +
                        "<td>" +
                        item.NumberOfTickets +
                        "</td>" +
                        "<td>" +
                        item.Percentage +
                        "</td>" +
                        "</tr>";
                    appendRowToTable("#statusSummaryTable", newTr);
                });
        }


        function appendRowToTable(tableId, trRow) {
            $(tableId).find("tbody").append(trRow);
        }

        function drawDashBoard(dashBoardData) {
            $('#ticketCount').text(dashBoardData.TotalTickets);
            $('#userCount').text(dashBoardData.TotalUsers);
            $('#projectCount').text(dashBoardData.TotalProjects);
            $('#customerCount').text(dashBoardData.TotalCustomers);
        }

        function drawProjectChart(projectSummaryData) {
            var projects = _.sortBy(projectSummaryData, (item) => { return item.ProjectName; });
            var openTickets = [];
            var resolvedTickets = [];
            var closedTickets = [];
            _.forEach(projects, (project) => { openTickets.push(project.OpenTickets); });
            _.forEach(projects, (project) => { resolvedTickets.push(project.ResolvedTickets); });
            _.forEach(projects, (project) => { closedTickets.push(project.ClosedTickets); });
            var projectNames = _.map(projectSummaryData, (item) => { return item.ProjectName; });

            Highcharts.chart('chartProjectContainer',
            {
                title: {
                    text: ''
                },
                xAxis: {
                    categories: projectNames
                },
                yAxis: {
                    title: {
                        text: ""
                    }
                },
                legend: { enabled: true },
                credits: { enabled: false },
                series: [
                    {
                        type: 'column',
                        name: Resources.Open,
                        data: openTickets
                    }, {
                        type: 'column',
                        name: Resources.Closed,
                        data: closedTickets
                    }, {
                        type: 'column',
                        name: Resources.Resoled,
                        data: resolvedTickets
                    }
                ]
            });
        }


        function drawUserChart(userSummaryData) {
            var users = _.sortBy(userSummaryData, (item) => { return item.UserName; });
            var openTickets = [];
            var resolvedTickets = [];
            var closedTickets = [];
            _.forEach(users, (user) => { openTickets.push(user.OpenTickets); });
            _.forEach(users, (user) => { resolvedTickets.push(user.ResolvedTickets); });
            _.forEach(users, (user) => { closedTickets.push(user.ClosedTickets); });
            var userNames = _.map(userSummaryData, (item) => { return item.UserName; });

            Highcharts.chart('chartUserContainer',
            {
                title: {
                    text: ''
                },
                xAxis: {
                    categories: userNames
                },
                yAxis: {
                    title: {
                        text: ""
                    }
                },
                legend: { enabled: true },
                credits: { enabled: false },
                series: [
                    {
                        type: 'column',
                        name: Resources.Open,
                        data: openTickets
                    }, {
                        type: 'column',
                        name: Resources.Closed,
                        data: closedTickets
                    }, {
                        type: 'column',
                        name: Resources.Resoled,
                        data: resolvedTickets
                    }
                ]
            });

        }


    </script>
}