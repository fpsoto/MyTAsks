//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------




//INSTANT C# NOTE: Formerly VB project-level imports:
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Diagnostics;
using System.Linq;
using System.Xml.Linq;

namespace Properties
{

	[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0"), global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
	internal sealed partial class Settings : System.Configuration.ApplicationSettingsBase
	{
		private static Settings defaultInstance = (Settings)global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings());

#region My.Settings Auto-Save Functionality
//INSTANT C# TODO TASK: C# compiler constants cannot be set to explicit values:
//INSTANT C# WARNING: This conditional compilation directive cannot be used in C#:
//#if _MyType == "WindowsForms"
	private static bool addedHandler;

	private static object addedHandlerLockObject = new object();

	[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
	private static void AutoSaveSettings(object sender, global::System.EventArgs e)
	{
		if (My.MyApplication.Application.SaveMySettingsOnExit)
		{
			defaultInstance.Save();
		}
	}
//#endif
#endregion

		public static Settings Default
		{
			get
			{

//INSTANT C# TODO TASK: C# compiler constants cannot be set to explicit values:
//INSTANT C# WARNING: This conditional compilation directive cannot be used in C#:
//#if _MyType == "WindowsForms"
			   if (!addedHandler)
			   {
					lock (addedHandlerLockObject)
					{
						if (!addedHandler)
						{
							My.MyApplication.Application.Shutdown += new Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler(AutoSaveSettings);
							addedHandler = true;
						}
					}
				}
//#endif
				return defaultInstance;
			}
		}
	}
}


